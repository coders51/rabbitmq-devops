version: "3.9"

networks:
  backbone1:
    driver: bridge
    name: backbone1

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 15692:15692
      - 15672:15672
      - 5672:5672
    volumes:
      - type: bind
        source: ./enabled_plugins
        target: /etc/rabbitmq/enabled_plugins
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    networks:
      - backbone1
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    volumes:
      - ./grafana:/var/lib/grafana
    user: root
    environment:
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp4dev:25
    ports:
      - 3000:3000
    networks:
      - backbone1

  prometheus:
    image: prom/prometheus:v2.50.1
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: bind
        source: ./rabbitmq-cluster-alert.rules.yml
        target: /etc/prometheus/rabbitmq-cluster-alert.rules.yml
      - type: bind
        source: ./prometheus-self-monitoring-alert.rules.yml
        target: /etc/prometheus/prometheus-self-monitoring-alert.rules.yml
      - type: bind
        source: ./rabbitmq-architecture-alert.rules.yml
        target: /etc/prometheus/rabbitmq-architecture-alert.rules.yml
    user: root
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - 9090:9090
    networks:
      - backbone1

  alert-manager:
    image: prom/alertmanager:v0.27.0
    container_name: alert-manager
    hostname: alert-manager
    volumes:
      - type: bind
        source: ./alert-manager.yml.tpl
        target: /etc/alertmanager/alert-manager.yml.tpl
    ports:
      - 9093:9093
    #NOTE: you need to setup an env variable SLACK_API_URL when starting docker-compose (e.g. with direnv)
    entrypoint: >
      sh -c "
        sed 's|env.SLACK_API_URL|$SLACK_API_URL|' /etc/alertmanager/alert-manager.yml.tpl > /etc/alertmanager/alert-manager.yml \\
        && /bin/alertmanager --config.file=/etc/alertmanager/alert-manager.yml
      "
    networks:
      - backbone1

  smtp4dev:
    container_name: smtp4dev
    hostname: smpt4dev
    image: rnwood/smtp4dev:v3
    restart: unless-stopped
    ports:
      - 2525:2525
      - 1080:80
    networks:
      - backbone1
